# Generated by Django 2.1.7 on 2019-03-05 15:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('lk_code', models.IntegerField(verbose_name='Код личного кабинета')),
                ('subscribe', models.BooleanField(default=False, verbose_name='Подписка')),
                ('last_news', models.CharField(max_length=100, verbose_name='Последняя новость')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(verbose_name='Ответ')),
                ('reaction', models.TextField(verbose_name='Реакция на ответ')),
                ('is_true', models.BooleanField(verbose_name='Верный ответ')),
            ],
            options={
                'verbose_name': 'Ответ',
                'verbose_name_plural': 'Ответы',
            },
        ),
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('faculty', models.CharField(max_length=150, verbose_name='Факультет')),
                ('keys_plus', models.CharField(max_length=15, verbose_name='Код направления')),
                ('ball_k', models.IntegerField(verbose_name='Минимальный балл на контракт')),
                ('ball_b', models.IntegerField(null=True, verbose_name='Минимальный балл на бюджет')),
                ('url', models.URLField(verbose_name='Ссылка на направление')),
                ('active', models.BooleanField(default=True, verbose_name='Активно')),
                ('description', models.TextField(verbose_name='Описание')),
                ('profile_name', models.CharField(max_length=50, verbose_name='Профиль')),
            ],
            options={
                'verbose_name': 'Направление',
                'verbose_name_plural': 'Направления',
            },
        ),
        migrations.CreateModel(
            name='Msg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay', models.CharField(max_length=50, verbose_name='payload')),
                ('msg', models.TextField(verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'Сообщение',
                'verbose_name_plural': 'Сообщения',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='Вопрос')),
                ('answers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question', to='administrator.Answer', verbose_name='Ответы')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
        ),
        migrations.CreateModel(
            name='Sphere',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Сфера',
                'verbose_name_plural': 'Сферы',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Дата и время изменения')),
                ('start_date', models.DateField(verbose_name='Дата начала теста')),
                ('questions', models.ManyToManyField(blank=True, related_name='test', to='administrator.Question', verbose_name='Вопросы')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесты',
            },
        ),
        migrations.AddField(
            model_name='direction',
            name='spheres',
            field=models.ManyToManyField(blank=True, related_name='direction', to='administrator.Sphere', verbose_name='Сферы'),
        ),
        migrations.AddField(
            model_name='direction',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='direction', to='administrator.Subject', verbose_name='Предметы'),
        ),
        migrations.AddField(
            model_name='account',
            name='spheres',
            field=models.ManyToManyField(blank=True, related_name='account', to='administrator.Sphere', verbose_name='Сферы'),
        ),
        migrations.AddField(
            model_name='account',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='account', to='administrator.Subject', verbose_name='Предметы'),
        ),
    ]
