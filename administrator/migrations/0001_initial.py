# Generated by Django 2.1.7 on 2020-03-02 03:13

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('firstName', models.CharField(default='name', max_length=50, verbose_name='Имя')),
                ('lastName', models.CharField(default='surname', max_length=50, verbose_name='Фамилия')),
                ('login', models.CharField(max_length=50, unique=True, verbose_name='Логин')),
                ('password', models.TextField(default='pass', verbose_name='Пароль')),
                ('isAdmin', models.BooleanField(default=False, verbose_name='Админ')),
                ('is_active', models.BooleanField(default=True, verbose_name='Аккаунт действует')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Сотрудник')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Администратор',
                'verbose_name_plural': 'Администраторы',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id')),
                ('random_id', models.IntegerField(default=0, verbose_name='идентификатор сообщений')),
                ('lk_code', models.CharField(default=0, max_length=60, verbose_name='Код личного кабинета')),
                ('state', models.BooleanField(default=False, verbose_name='Состояние')),
                ('currency_snap_id', models.IntegerField(default=-1, verbose_name='Текущий снимок')),
                ('subscribe', models.BooleanField(default=False, verbose_name='Подписка')),
                ('last_news', models.CharField(default='null', max_length=100, verbose_name='Последняя новость')),
                ('feedback', models.CharField(default='false', max_length=20, verbose_name='Обратная связь')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=40, verbose_name='Ответ')),
                ('reaction', models.TextField(verbose_name='Реакция на ответ')),
                ('is_true', models.BooleanField(verbose_name='Верный ответ')),
            ],
            options={
                'verbose_name': 'Ответ',
                'verbose_name_plural': 'Ответы',
            },
        ),
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idNSTU', models.IntegerField(null=True, verbose_name='id НГТУ')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('faculty', models.CharField(max_length=150, verbose_name='Факультет')),
                ('keys_plus', models.CharField(max_length=15, verbose_name='Код направления')),
                ('ball_k', models.IntegerField(null=True, verbose_name='Минимальный балл на контракт')),
                ('ball_b', models.IntegerField(null=True, verbose_name='Минимальный балл на бюджет')),
                ('url', models.URLField(verbose_name='Ссылка на направление')),
                ('active', models.BooleanField(default=True, verbose_name='Активно')),
                ('description', models.TextField(null=True, verbose_name='Описание')),
                ('profile_name', models.CharField(max_length=50, null=True, verbose_name='Профиль')),
                ('RN', models.IntegerField(null=True, verbose_name='Приоритет')),
            ],
            options={
                'verbose_name': 'Направление',
                'verbose_name_plural': 'Направления',
            },
        ),
        migrations.CreateModel(
            name='Msg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay', models.CharField(max_length=50, verbose_name='payload')),
                ('msg', models.TextField(verbose_name='Сообщение')),
            ],
            options={
                'verbose_name': 'Сообщение',
                'verbose_name_plural': 'Сообщения',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('active', models.BooleanField(default=False, verbose_name='Активный')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(null=True, verbose_name='Номер вопроса')),
                ('question', models.TextField(verbose_name='Вопрос')),
                ('answers', models.ManyToManyField(blank=True, related_name='question', to='administrator.Answer', verbose_name='Ответы')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
        ),
        migrations.CreateModel(
            name='ResultOfTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rightAnswer', models.IntegerField(default=0, verbose_name='Количество правильных ответов')),
                ('allAnswer', models.IntegerField(default=0, verbose_name='Количество всех ответов')),
            ],
            options={
                'verbose_name': 'Результат теста',
                'verbose_name_plural': 'Результаты теста',
            },
        ),
        migrations.CreateModel(
            name='Sphere',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Сфера',
                'verbose_name_plural': 'Сферы',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('active', models.BooleanField(default=False, verbose_name='Активный')),
                ('questions', models.ManyToManyField(blank=True, related_name='test', to='administrator.Question', verbose_name='Вопросы')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесты',
            },
        ),
        migrations.AddField(
            model_name='resultoftest',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='administrator.Test', verbose_name='Тест'),
        ),
        migrations.AddField(
            model_name='direction',
            name='spheres',
            field=models.ManyToManyField(blank=True, related_name='direction', to='administrator.Sphere', verbose_name='Сферы'),
        ),
        migrations.AddField(
            model_name='direction',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='direction', to='administrator.Subject', verbose_name='Предметы'),
        ),
        migrations.AddField(
            model_name='account',
            name='spheres',
            field=models.ManyToManyField(blank=True, related_name='account', to='administrator.Sphere', verbose_name='Сферы'),
        ),
        migrations.AddField(
            model_name='account',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='account', to='administrator.Subject', verbose_name='Предметы'),
        ),
        migrations.AddField(
            model_name='account',
            name='tests',
            field=models.ManyToManyField(related_name='account', to='administrator.ResultOfTest', verbose_name='Результаты пройденных тестов'),
        ),
    ]
